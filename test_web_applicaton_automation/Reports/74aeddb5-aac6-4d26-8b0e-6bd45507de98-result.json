{"name": "test_assertion_web_page_title", "status": "failed", "statusDetails": {"message": "AssertionError: Page Title Assertion Failed Due To: Page Title ssertion Failed: Page Title ssertion Failed\nassert False", "trace": "message = 'Page Title ssertion Failed'\n\n    def assert_always_false(message=\"Condition is not False\"):\n        try:\n>           assert False, message\nE           AssertionError: Page Title ssertion Failed\nE           assert False\n\ntest_vcm_automation\\test_functions\\test_sellenium_assertions.py:52: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_page_title>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_assertion_web_page_title(self):\n        driver = test_sellinium_functions.initialize_driver()\n        try:\n            test_sellinium_functions.maximize_window(driver)\n            test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n            actual_page_title = driver.title\n    \n            if actual_page_title == data.expected_title:\n                test_sellenium_assertions.assert_always_true(passed_assertion_messages.title_assertion_passed)\n                driver.close()\n            else:\n                test_allure_functions2.AllureFunctions2(driver).attach_screenshot(\n                    screenshots_names.title_assertion_failed)\n>               test_sellenium_assertions.assert_always_false(failed_assertion_messages.title_assertion_failed)\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmessage = 'Page Title ssertion Failed'\n\n    def assert_always_false(message=\"Condition is not False\"):\n        try:\n            assert False, message\n    \n        except AssertionError as e:\n>           raise AssertionError(f\"{message}: {e}\")\nE           AssertionError: Page Title ssertion Failed: Page Title ssertion Failed\nE           assert False\n\ntest_vcm_automation\\test_functions\\test_sellenium_assertions.py:55: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_page_title>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_assertion_web_page_title(self):\n        driver = test_sellinium_functions.initialize_driver()\n        try:\n            test_sellinium_functions.maximize_window(driver)\n            test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n            actual_page_title = driver.title\n    \n            if actual_page_title == data.expected_title:\n                test_sellenium_assertions.assert_always_true(passed_assertion_messages.title_assertion_passed)\n                driver.close()\n            else:\n                test_allure_functions2.AllureFunctions2(driver).attach_screenshot(\n                    screenshots_names.title_assertion_failed)\n                test_sellenium_assertions.assert_always_false(failed_assertion_messages.title_assertion_failed)\n    \n        except Exception as e:\n>           raise AssertionError(f\"Page Title Assertion Failed Due To: {e}\")\nE           AssertionError: Page Title Assertion Failed Due To: Page Title ssertion Failed: Page Title ssertion Failed\nE           assert False\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:34: AssertionError"}, "attachments": [{"name": "title_assertion_fail", "source": "30207aec-ccf0-4194-b93d-bd61b213767b-attachment.png", "type": "image/png"}], "start": 1692035760387, "stop": 1692035774652, "uuid": "cfe8f5de-63c7-431c-a232-8058fc6fcf47", "historyId": "cf58f6017d69a1fca50271e26d969442", "testCaseId": "cf58f6017d69a1fca50271e26d969442", "fullName": "test_vcm_automation.test_Scripts.test_vcm_login_page.TestVWebPage#test_assertion_web_page_title", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "parentSuite", "value": "test_vcm_automation.test_Scripts"}, {"name": "suite", "value": "test_vcm_login_page"}, {"name": "subSuite", "value": "TestVWebPage"}, {"name": "host", "value": "DESKTOP-UIEVDL1"}, {"name": "thread", "value": "2248-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vcm_automation.test_Scripts.test_vcm_login_page"}]}