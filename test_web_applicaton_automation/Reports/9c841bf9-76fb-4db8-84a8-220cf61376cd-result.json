{"name": "test_assertion_web_page_title", "status": "failed", "statusDetails": {"message": "AssertionError: Message: timeout: Timed out receiving message from renderer: 297.176\n  (Session info: chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF65CE84A62+57106]\n\t(No symbol) [0x00007FF65CDFCF52]\n\t(No symbol) [0x00007FF65CCCE2CB]\n\t(No symbol) [0x00007FF65CCBBBAA]\n\t(No symbol) [0x00007FF65CCBBAF3]\n\t(No symbol) [0x00007FF65CCBA575]\n\t(No symbol) [0x00007FF65CCBAEAE]\n\t(No symbol) [0x00007FF65CCC7F4B]\n\t(No symbol) [0x00007FF65CCD7E61]\n\t(No symbol) [0x00007FF65CCDBFFA]\n\t(No symbol) [0x00007FF65CCBB477]\n\t(No symbol) [0x00007FF65CCD7D3A]\n\t(No symbol) [0x00007FF65CD3E589]\n\t(No symbol) [0x00007FF65CD26793]\n\t(No symbol) [0x00007FF65CCFCE81]\n\t(No symbol) [0x00007FF65CCFE064]\n\tGetHandleVerifier [0x00007FF65D134222+2873042]\n\tGetHandleVerifier [0x00007FF65D186590+3209792]\n\tGetHandleVerifier [0x00007FF65D17F3AF+3180639]\n\tGetHandleVerifier [0x00007FF65CF15F25+652245]\n\t(No symbol) [0x00007FF65CE08618]\n\t(No symbol) [0x00007FF65CE047C4]\n\t(No symbol) [0x00007FF65CE048BC]\n\t(No symbol) [0x00007FF65CDF4C33]\n\tBaseThreadInitThunk [0x00007FFC17AB7614+20]\n\tRtlUserThreadStart [0x00007FFC192A26B1+33]", "trace": "self = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_page_title>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_assertion_web_page_title(self):\n        driver = test_sellinium_functions.initialize_driver()\n        try:\n            test_sellinium_functions.maximize_window(driver)\n>           test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_vcm_automation\\test_functions\\test_sellinium_functions.py:20: in open_page\n    driver.get(url)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000179AB504DD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...07FF65CDF4C33]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC17AB7614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC192A26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 297.176\nE         (Session info: chrome=115.0.5790.171)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF65CE84A62+57106]\nE       \t(No symbol) [0x00007FF65CDFCF52]\nE       \t(No symbol) [0x00007FF65CCCE2CB]\nE       \t(No symbol) [0x00007FF65CCBBBAA]\nE       \t(No symbol) [0x00007FF65CCBBAF3]\nE       \t(No symbol) [0x00007FF65CCBA575]\nE       \t(No symbol) [0x00007FF65CCBAEAE]\nE       \t(No symbol) [0x00007FF65CCC7F4B]\nE       \t(No symbol) [0x00007FF65CCD7E61]\nE       \t(No symbol) [0x00007FF65CCDBFFA]\nE       \t(No symbol) [0x00007FF65CCBB477]\nE       \t(No symbol) [0x00007FF65CCD7D3A]\nE       \t(No symbol) [0x00007FF65CD3E589]\nE       \t(No symbol) [0x00007FF65CD26793]\nE       \t(No symbol) [0x00007FF65CCFCE81]\nE       \t(No symbol) [0x00007FF65CCFE064]\nE       \tGetHandleVerifier [0x00007FF65D134222+2873042]\nE       \tGetHandleVerifier [0x00007FF65D186590+3209792]\nE       \tGetHandleVerifier [0x00007FF65D17F3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF65CF15F25+652245]\nE       \t(No symbol) [0x00007FF65CE08618]\nE       \t(No symbol) [0x00007FF65CE047C4]\nE       \t(No symbol) [0x00007FF65CE048BC]\nE       \t(No symbol) [0x00007FF65CDF4C33]\nE       \tBaseThreadInitThunk [0x00007FFC17AB7614+20]\nE       \tRtlUserThreadStart [0x00007FFC192A26B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_page_title>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_assertion_web_page_title(self):\n        driver = test_sellinium_functions.initialize_driver()\n        try:\n            test_sellinium_functions.maximize_window(driver)\n            test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n            actual_page_title = driver.title\n    \n            if actual_page_title == data.expected_title:\n                test_sellenium_assertions.assert_always_true(passed_assertion_messages.title_assertion_passed)\n                driver.close()\n                driver.quit()\n            else:\n                test_allure_functions2.AllureFunctions2(driver).attach_screenshot(\n                    screenshots_names.title_assertion_failed)\n                test_sellenium_assertions.assert_always_false(failed_assertion_messages.title_assertion_failed)\n    \n        except Exception as e:\n>           raise AssertionError(f\"{e}\")\nE           AssertionError: Message: timeout: Timed out receiving message from renderer: 297.176\nE             (Session info: chrome=115.0.5790.171)\nE           Stacktrace:\nE           Backtrace:\nE           \tGetHandleVerifier [0x00007FF65CE84A62+57106]\nE           \t(No symbol) [0x00007FF65CDFCF52]\nE           \t(No symbol) [0x00007FF65CCCE2CB]\nE           \t(No symbol) [0x00007FF65CCBBBAA]\nE           \t(No symbol) [0x00007FF65CCBBAF3]\nE           \t(No symbol) [0x00007FF65CCBA575]\nE           \t(No symbol) [0x00007FF65CCBAEAE]\nE           \t(No symbol) [0x00007FF65CCC7F4B]\nE           \t(No symbol) [0x00007FF65CCD7E61]\nE           \t(No symbol) [0x00007FF65CCDBFFA]\nE           \t(No symbol) [0x00007FF65CCBB477]\nE           \t(No symbol) [0x00007FF65CCD7D3A]\nE           \t(No symbol) [0x00007FF65CD3E589]\nE           \t(No symbol) [0x00007FF65CD26793]\nE           \t(No symbol) [0x00007FF65CCFCE81]\nE           \t(No symbol) [0x00007FF65CCFE064]\nE           \tGetHandleVerifier [0x00007FF65D134222+2873042]\nE           \tGetHandleVerifier [0x00007FF65D186590+3209792]\nE           \tGetHandleVerifier [0x00007FF65D17F3AF+3180639]\nE           \tGetHandleVerifier [0x00007FF65CF15F25+652245]\nE           \t(No symbol) [0x00007FF65CE08618]\nE           \t(No symbol) [0x00007FF65CE047C4]\nE           \t(No symbol) [0x00007FF65CE048BC]\nE           \t(No symbol) [0x00007FF65CDF4C33]\nE           \tBaseThreadInitThunk [0x00007FFC17AB7614+20]\nE           \tRtlUserThreadStart [0x00007FFC192A26B1+33]\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:36: AssertionError"}, "start": 1692085345429, "stop": 1692085648120, "uuid": "5d4a86bd-f6cd-4ece-a65b-8a68be9ae9b1", "historyId": "cf58f6017d69a1fca50271e26d969442", "testCaseId": "cf58f6017d69a1fca50271e26d969442", "fullName": "test_vcm_automation.test_Scripts.test_vcm_login_page.TestVWebPage#test_assertion_web_page_title", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "parentSuite", "value": "test_vcm_automation.test_Scripts"}, {"name": "suite", "value": "test_vcm_login_page"}, {"name": "subSuite", "value": "TestVWebPage"}, {"name": "host", "value": "DESKTOP-UIEVDL1"}, {"name": "thread", "value": "6240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vcm_automation.test_Scripts.test_vcm_login_page"}]}