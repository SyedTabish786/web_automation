{"name": "test_assertion_web_pagelogo", "status": "failed", "statusDetails": {"message": "AssertionError: Page Logo Assertion Failed Due To: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id='app']/div[1]/div/div[1]/div/div[1]/ because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id='app']/div[1]/div/div[1]/div/div[1]/' is not a valid XPath expression.\n  (Session info: chrome=115.0.5790.171); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF776584A62+57106]\n\t(No symbol) [0x00007FF7764FCF52]\n\t(No symbol) [0x00007FF7763CE2CB]\n\t(No symbol) [0x00007FF7763D22B2]\n\t(No symbol) [0x00007FF7763D3C5F]\n\t(No symbol) [0x00007FF7763D3D50]\n\t(No symbol) [0x00007FF7764074E1]\n\t(No symbol) [0x00007FF77640795C]\n\t(No symbol) [0x00007FF776440477]\n\t(No symbol) [0x00007FF7764269FF]\n\t(No symbol) [0x00007FF77643E522]\n\t(No symbol) [0x00007FF776426793]\n\t(No symbol) [0x00007FF7763FCE81]\n\t(No symbol) [0x00007FF7763FE064]\n\tGetHandleVerifier [0x00007FF776834222+2873042]\n\tGetHandleVerifier [0x00007FF776886590+3209792]\n\tGetHandleVerifier [0x00007FF77687F3AF+3180639]\n\tGetHandleVerifier [0x00007FF776615F25+652245]\n\t(No symbol) [0x00007FF776508618]\n\t(No symbol) [0x00007FF7765047C4]\n\t(No symbol) [0x00007FF7765048BC]\n\t(No symbol) [0x00007FF7764F4C33]\n\tBaseThreadInitThunk [0x00007FFD4A537614+20]\n\tRtlUserThreadStart [0x00007FFD4A9626B1+33]", "trace": "self = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_pagelogo>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_assertion_web_pagelogo(self):\n        driver = test_sellinium_functions.initialize_driver()\n    \n        try:\n            test_sellinium_functions.maximize_window(driver)\n            test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n    \n>           login_page = login(driver)\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_vcm_automation\\test_pages\\test_signup_page.py:15: in __init__\n    self.logo = wait.until(EC.element_to_be_clickable((By.XPATH, locator.page_logo)))\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:86: in until\n    value = method(self._driver)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:355: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024DB0B33A50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...07FF7764F4C33]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD4A537614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD4A9626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id='app']/div[1]/div/div[1]/div/div[1]/ because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id='app']/div[1]/div/div[1]/div/div[1]/' is not a valid XPath expression.\nE         (Session info: chrome=115.0.5790.171); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF776584A62+57106]\nE       \t(No symbol) [0x00007FF7764FCF52]\nE       \t(No symbol) [0x00007FF7763CE2CB]\nE       \t(No symbol) [0x00007FF7763D22B2]\nE       \t(No symbol) [0x00007FF7763D3C5F]\nE       \t(No symbol) [0x00007FF7763D3D50]\nE       \t(No symbol) [0x00007FF7764074E1]\nE       \t(No symbol) [0x00007FF77640795C]\nE       \t(No symbol) [0x00007FF776440477]\nE       \t(No symbol) [0x00007FF7764269FF]\nE       \t(No symbol) [0x00007FF77643E522]\nE       \t(No symbol) [0x00007FF776426793]\nE       \t(No symbol) [0x00007FF7763FCE81]\nE       \t(No symbol) [0x00007FF7763FE064]\nE       \tGetHandleVerifier [0x00007FF776834222+2873042]\nE       \tGetHandleVerifier [0x00007FF776886590+3209792]\nE       \tGetHandleVerifier [0x00007FF77687F3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF776615F25+652245]\nE       \t(No symbol) [0x00007FF776508618]\nE       \t(No symbol) [0x00007FF7765047C4]\nE       \t(No symbol) [0x00007FF7765048BC]\nE       \t(No symbol) [0x00007FF7764F4C33]\nE       \tBaseThreadInitThunk [0x00007FFD4A537614+20]\nE       \tRtlUserThreadStart [0x00007FFD4A9626B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: InvalidSelectorException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_pagelogo>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_assertion_web_pagelogo(self):\n        driver = test_sellinium_functions.initialize_driver()\n    \n        try:\n            test_sellinium_functions.maximize_window(driver)\n            test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n    \n            login_page = login(driver)\n    \n            logo_displayed = test_sellinium_functions.get_element_attribute(login_page.logo, \"src\")\n    \n            if logo_displayed == data.expected_logo_source:\n    \n                test_sellenium_assertions.assert_true(test_sellinium_functions.is_element_displayed(login_page.logo))\n    \n                driver.close()\n            else:\n    \n                test_allure_functions2.AllureFunctions2(driver).attach_screenshot(\"Page_Logo_assertion_fail\")\n                test_sellenium_assertions.assert_false(test_sellinium_functions.is_element_displayed(login_page.logo),\n                                                       \"element not found\")\n    \n        except Exception as e:\n>           raise AssertionError(f\"Page Logo Assertion Failed Due To: {e}\")\nE           AssertionError: Page Logo Assertion Failed Due To: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id='app']/div[1]/div/div[1]/div/div[1]/ because of the following error:\nE           SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id='app']/div[1]/div/div[1]/div/div[1]/' is not a valid XPath expression.\nE             (Session info: chrome=115.0.5790.171); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE           Stacktrace:\nE           Backtrace:\nE           \tGetHandleVerifier [0x00007FF776584A62+57106]\nE           \t(No symbol) [0x00007FF7764FCF52]\nE           \t(No symbol) [0x00007FF7763CE2CB]\nE           \t(No symbol) [0x00007FF7763D22B2]\nE           \t(No symbol) [0x00007FF7763D3C5F]\nE           \t(No symbol) [0x00007FF7763D3D50]\nE           \t(No symbol) [0x00007FF7764074E1]\nE           \t(No symbol) [0x00007FF77640795C]\nE           \t(No symbol) [0x00007FF776440477]\nE           \t(No symbol) [0x00007FF7764269FF]\nE           \t(No symbol) [0x00007FF77643E522]\nE           \t(No symbol) [0x00007FF776426793]\nE           \t(No symbol) [0x00007FF7763FCE81]\nE           \t(No symbol) [0x00007FF7763FE064]\nE           \tGetHandleVerifier [0x00007FF776834222+2873042]\nE           \tGetHandleVerifier [0x00007FF776886590+3209792]\nE           \tGetHandleVerifier [0x00007FF77687F3AF+3180639]\nE           \tGetHandleVerifier [0x00007FF776615F25+652245]\nE           \t(No symbol) [0x00007FF776508618]\nE           \t(No symbol) [0x00007FF7765047C4]\nE           \t(No symbol) [0x00007FF7765048BC]\nE           \t(No symbol) [0x00007FF7764F4C33]\nE           \tBaseThreadInitThunk [0x00007FFD4A537614+20]\nE           \tRtlUserThreadStart [0x00007FFD4A9626B1+33]\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:75: AssertionError"}, "start": 1692031169222, "stop": 1692031202044, "uuid": "580ca1f2-ad31-460e-be07-7570f91eae4f", "historyId": "678f381f4c9d19625c41ebe7c18b4e39", "testCaseId": "678f381f4c9d19625c41ebe7c18b4e39", "fullName": "test_vcm_automation.test_Scripts.test_vcm_login_page.TestVWebPage#test_assertion_web_pagelogo", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "parentSuite", "value": "test_vcm_automation.test_Scripts"}, {"name": "suite", "value": "test_vcm_login_page"}, {"name": "subSuite", "value": "TestVWebPage"}, {"name": "host", "value": "DESKTOP-UIEVDL1"}, {"name": "thread", "value": "9188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vcm_automation.test_Scripts.test_vcm_login_page"}]}