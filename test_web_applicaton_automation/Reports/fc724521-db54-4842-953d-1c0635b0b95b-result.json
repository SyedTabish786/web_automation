{"name": "test_assertion_web_pagelogo", "status": "failed", "statusDetails": {"message": "AssertionError: Page Logo Assertion Failed Due To: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF7D4DF4A62+57106]\n\t(No symbol) [0x00007FF7D4D6CF52]\n\t(No symbol) [0x00007FF7D4C3E2CB]\n\t(No symbol) [0x00007FF7D4C7786E]\n\t(No symbol) [0x00007FF7D4C7795C]\n\t(No symbol) [0x00007FF7D4CB0477]\n\t(No symbol) [0x00007FF7D4C969FF]\n\t(No symbol) [0x00007FF7D4CAE522]\n\t(No symbol) [0x00007FF7D4C96793]\n\t(No symbol) [0x00007FF7D4C6CE81]\n\t(No symbol) [0x00007FF7D4C6E064]\n\tGetHandleVerifier [0x00007FF7D50A4222+2873042]\n\tGetHandleVerifier [0x00007FF7D50F6590+3209792]\n\tGetHandleVerifier [0x00007FF7D50EF3AF+3180639]\n\tGetHandleVerifier [0x00007FF7D4E85F25+652245]\n\t(No symbol) [0x00007FF7D4D78618]\n\t(No symbol) [0x00007FF7D4D747C4]\n\t(No symbol) [0x00007FF7D4D748BC]\n\t(No symbol) [0x00007FF7D4D64C33]\n\tBaseThreadInitThunk [0x00007FFE45F07614+20]\n\tRtlUserThreadStart [0x00007FFE47D826B1+33]", "trace": "self = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_pagelogo>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_assertion_web_pagelogo(self):\n        driver = test_sellinium_functions.initialize_driver()\n    \n        try:\n            test_sellinium_functions.maximize_window(driver)\n            test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n    \n            # Create a login page object\n>           login_page = login(driver)\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_vcm_automation\\test_pages\\test_signup_page.py:15: in __init__\n    self.logo = wait.until(EC.element_to_be_clickable((By.XPATH, locator.page_logo)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fc479bccf91fe0cfed3903640d1bd586\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001751FAFE160>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF7D4DF4A62+57106]\nE       \t(No symbol) [0x00007FF7D4D6CF52]\nE       \t(No symbol) [0x00007FF7D4C3E2CB]\nE       \t(No symbol) [0x00007FF7D4C7786E]\nE       \t(No symbol) [0x00007FF7D4C7795C]\nE       \t(No symbol) [0x00007FF7D4CB0477]\nE       \t(No symbol) [0x00007FF7D4C969FF]\nE       \t(No symbol) [0x00007FF7D4CAE522]\nE       \t(No symbol) [0x00007FF7D4C96793]\nE       \t(No symbol) [0x00007FF7D4C6CE81]\nE       \t(No symbol) [0x00007FF7D4C6E064]\nE       \tGetHandleVerifier [0x00007FF7D50A4222+2873042]\nE       \tGetHandleVerifier [0x00007FF7D50F6590+3209792]\nE       \tGetHandleVerifier [0x00007FF7D50EF3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF7D4E85F25+652245]\nE       \t(No symbol) [0x00007FF7D4D78618]\nE       \t(No symbol) [0x00007FF7D4D747C4]\nE       \t(No symbol) [0x00007FF7D4D748BC]\nE       \t(No symbol) [0x00007FF7D4D64C33]\nE       \tBaseThreadInitThunk [0x00007FFE45F07614+20]\nE       \tRtlUserThreadStart [0x00007FFE47D826B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_Scripts.test_vcm_login_page.TestVWebPage testMethod=test_assertion_web_pagelogo>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_assertion_web_pagelogo(self):\n        driver = test_sellinium_functions.initialize_driver()\n    \n        try:\n            test_sellinium_functions.maximize_window(driver)\n            test_sellinium_functions.open_page(driver, data.expected_login_page_url)\n    \n            # Create a login page object\n            login_page = login(driver)\n    \n            # Check if the logo element is displayed\n            logo_displayed = test_sellinium_functions.get_element_attribute(login_page.logo, \"src\")\n            # test_sellenium_assertions.assert_condition(logo_displayed, True, \"Logo is not displayed\")\n    \n            if logo_displayed == data.expected_logo_source:\n                # Logo is displayed, test passes\n                test_sellenium_assertions.assert_true(test_sellinium_functions.is_element_displayed(login_page.logo))\n    \n                driver.close()\n            else:\n                # Logo is not displayed, test fails\n    \n                test_allure_functions2.AllureFunctions2(driver).attach_screenshot(\"Page_Logo_assertion_fail\")\n                test_sellenium_assertions.assert_false(test_sellinium_functions.is_element_displayed(login_page.logo),\n                                                       \"element not found\")\n    \n        except Exception as e:\n>           raise AssertionError(f\"Page Logo Assertion Failed Due To: {e}\")\nE           AssertionError: Page Logo Assertion Failed Due To: Message: \nE           Stacktrace:\nE           Backtrace:\nE           \tGetHandleVerifier [0x00007FF7D4DF4A62+57106]\nE           \t(No symbol) [0x00007FF7D4D6CF52]\nE           \t(No symbol) [0x00007FF7D4C3E2CB]\nE           \t(No symbol) [0x00007FF7D4C7786E]\nE           \t(No symbol) [0x00007FF7D4C7795C]\nE           \t(No symbol) [0x00007FF7D4CB0477]\nE           \t(No symbol) [0x00007FF7D4C969FF]\nE           \t(No symbol) [0x00007FF7D4CAE522]\nE           \t(No symbol) [0x00007FF7D4C96793]\nE           \t(No symbol) [0x00007FF7D4C6CE81]\nE           \t(No symbol) [0x00007FF7D4C6E064]\nE           \tGetHandleVerifier [0x00007FF7D50A4222+2873042]\nE           \tGetHandleVerifier [0x00007FF7D50F6590+3209792]\nE           \tGetHandleVerifier [0x00007FF7D50EF3AF+3180639]\nE           \tGetHandleVerifier [0x00007FF7D4E85F25+652245]\nE           \t(No symbol) [0x00007FF7D4D78618]\nE           \t(No symbol) [0x00007FF7D4D747C4]\nE           \t(No symbol) [0x00007FF7D4D748BC]\nE           \t(No symbol) [0x00007FF7D4D64C33]\nE           \tBaseThreadInitThunk [0x00007FFE45F07614+20]\nE           \tRtlUserThreadStart [0x00007FFE47D826B1+33]\n\ntest_vcm_automation\\test_Scripts\\test_vcm_login_page.py:81: AssertionError"}, "start": 1692016455664, "stop": 1692016471022, "uuid": "30c89b09-fa04-4579-9383-f98b1f3fef2c", "historyId": "678f381f4c9d19625c41ebe7c18b4e39", "testCaseId": "678f381f4c9d19625c41ebe7c18b4e39", "fullName": "test_vcm_automation.test_Scripts.test_vcm_login_page.TestVWebPage#test_assertion_web_pagelogo", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "parentSuite", "value": "test_vcm_automation.test_Scripts"}, {"name": "suite", "value": "test_vcm_login_page"}, {"name": "subSuite", "value": "TestVWebPage"}, {"name": "host", "value": "DESKTOP-UIEVDL1"}, {"name": "thread", "value": "10484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vcm_automation.test_Scripts.test_vcm_login_page"}]}